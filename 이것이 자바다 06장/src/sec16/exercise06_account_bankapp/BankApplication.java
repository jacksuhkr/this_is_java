package sec16.exercise06_account_bankapp;

import java.util.Scanner;

public class BankApplication {
	private static Account[] accountArray = new Account[100];
	private static Scanner scanner = new Scanner(System.in);
	
	static int i = 0; 			//추가함, 총 생성된 계좌수
	static int l = 0;			//추가함, 내가 당장 정보이용할 계좌용
	static String ano;			//추가함, 계좌번호
	static String owner;		//추가함, 계좌주
	static int balance;			//추가함, 초기입금액
	
	public static void main(String[] args) {
		boolean run = true;
		while(run) {
			System.out.println("-----------------------------------------");
			System.out.println("1.계좌생성 | 2.계좌목록 | 3.예금 | 4.출금 | 5.종료");
			System.out.println("-----------------------------------------");
			System.out.print("선택> ");
			
			int selectNo = scanner.nextInt();
			scanner.nextLine();		//엔터무시용
			System.out.println();	//여유를 위한 한칸띔
			
			if(selectNo == 1) {
				createAccount();
			} else if(selectNo == 2) {
				accountList();
			} else if(selectNo == 3) {
				deposit();
			} else if(selectNo == 4) {
				withdraw();
			} else if(selectNo == 5) {
				run = false;
				System.out.println("프로그램 종료");
			}
			System.out.println();	//여유를 위한 한칸띔
		}
	}
		
		//계좌생성하기
		private static void createAccount() {
			//작성 위치
			System.out.println("-----------");
			System.out.println("    계좌생성");
			System.out.println("-----------");
			
			//계좌 정보 입력받기
			System.out.print("계좌번호: ");
			ano = scanner.nextLine();
			System.out.print("계좌주: ");
			owner = scanner.nextLine();
			System.out.print("초기입금액: ");
			balance = scanner.nextInt();
			accountArray[i] = new Account(ano, owner, balance);

			// 결과
			System.out.println("결과: 계좌가 생성되었습니다");
			i++;
		}
		
		//계좌목록보기
		private static void accountList() {
			//작성 위치
			System.out.println("-----------");
			System.out.println("    계좌목록");
			System.out.println("-----------");
			for(int k=0; k<i; k++) {
				System.out.println(accountArray[k].getAno() + "\t" 
						+ accountArray[k].getOwner() + "\t" + accountArray[k].getBalance());
			}
		}
		
		//예금하기
		private static void deposit() {
			//작성 위치
			System.out.println("-----------");
			System.out.println("      예금");
			System.out.println("-----------");
			
			// 계좌번호 확인
			findAccount();
			
			//예금하기
			System.out.print("예금액: ");
			accountArray[l].setBalance(accountArray[l].getBalance() + scanner.nextInt());
			
			// 결과
			System.out.println("결과: 예금이 성공되었습니다");
		}
		
		//출금하기
		private static void withdraw() {
			//작성 위치
			System.out.println("-----------");
			System.out.println("      출금");
			System.out.println("-----------");
			
			// 계좌번호 확인
			findAccount();
			
			//출금하기
			System.out.print("출금: ");
			accountArray[l].setBalance(accountArray[l].getBalance() - scanner.nextInt());
			//마이너스 통장 방지문구 만들기
			
			// 결과
			System.out.println("결과: 출금이 성공되었습니다");
		}
		
		//Account 배열에서 ano와 동일한 Account 객체 찾기
		private static Account findAccount() {
			//작성 위치
			while(true) { 
				System.out.print("계좌번호: ");
				ano = scanner.nextLine();
				for(l=0; l<i; l++) {
					if(ano.equals(accountArray[l].getAno())) {
						return accountArray[l];
					}
				} 
				if(l==i) System.out.println("해당계좌가 없습니다. 계좌번호를 다시 입력해주십시오!\n");
			}
		}
}